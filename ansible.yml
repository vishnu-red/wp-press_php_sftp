---
- name: Set up MariaDB, PHP, Nginx, and configure website
  hosts: localhost
  become: yes
  tasks:
    - name: Ensure /etc/yum.repos.d directory exists
      file:
        path: /etc/yum.repos.d
        state: directory

    - name: Create MariaDB repository file
      copy:
        dest: /etc/yum.repos.d/MariaDB.repo
        content: |
          [mariadb]
          name = MariaDB
          baseurl = http://yum.mariadb.org/10.6/rhel9-amd64
          gpgkey = https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
          gpgcheck = 1

    - name: Ensure python3-pip is installed
      yum:
        name: python3-pip
        state: present

    - name: Install passlib library
      pip:
        name: passlib
        state: present

    - name: Install PHP, MariaDB server, and required PHP extensions
      yum:
        name:
          - php
          - php-mysqlnd
          - php-mysqli
          - php-gd
          - php-mbstring
          - mariadb-server
          - mariadb
        state: present

    - name: Install Nginx
      yum:
        name: nginx
        state: present

    - name: Start and enable MariaDB service
      systemd:
        name: mariadb
        enabled: yes
        state: started

    - name: Start and enable Nginx service
      systemd:
        name: nginx
        enabled: yes
        state: started

    - name: Create a user named vishnu
      user:
        name: vishnu
        password: "{{ 'redhat' | password_hash('sha512') }}"
        create_home: yes

    - name: Create website directory for vishnu
      file:
        path: /home/vishnu/website/public
        state: directory
        owner: vishnu
        group: vishnu
        mode: '0755'

    - name: Configure Nginx server block for vishnu
      copy:
        dest: /etc/nginx/conf.d/mydata.conf
        content: |
          server {
              listen 80;
              listen [::]:80;
              server_name _;  # Default server name

              root /home/vishnu/website/public;

              # Load configuration files for the default server block.
              include /etc/nginx/default.d/*.conf;

              error_page 404 /404.html;
              location = /404.html {
              }

              error_page 500 502 503 504 /50x.html;
              location = /50x.html {
              }
          }

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test_result
      failed_when: "'syntax is okay' not in nginx_test_result.stderr and 'test is successful' not in nginx_test_result.stderr"

    - name: Reload Nginx to apply changes
      systemd:
        name: nginx
        state: reloaded

    - name: Set permissions for /home/vishnu
      command: chmod -R 755 /home/vishnu/
      become: yes

    - name: Change ownership for /home/vishnu/website
      command: chown -R nginx:nginx /home/vishnu/website/
      become: yes

    - name: Navigate to the website public directory
      shell: cd /home/vishnu/website/public
      args:
        chdir: /home/vishnu/website/public
      become: yes

    - name: Download WordPress latest.zip
      get_url:
        url: https://wordpress.org/latest.zip
        dest: /home/vishnu/website/public/latest.zip

    - name: Unzip the WordPress archive
      unarchive:
        src: /home/vishnu/website/public/latest.zip
        dest: /home/vishnu/website/public/
        remote_src: yes

    - name: Remove the downloaded zip file
      file:
        path: /home/vishnu/website/public/latest.zip
        state: absent

    - name: Set permissions for wp-content directory
      command: chmod -R 755 /home/vishnu/website/public/wordpress/wp-content
      become: yes

    - name: Change ownership of wp-content directory
      command: chown -R nginx:nginx /home/vishnu/website/public/wordpress/wp-content
      become: yes

    # Secure MariaDB installation using SQL commands, only if root password is not set
    - name: Check if MariaDB root password is set
      command: mysqladmin -u root status
      register: mariadb_root_check
      failed_when: false
      changed_when: false

    - name: Secure MariaDB installation
      shell: |
        mysql --user=root <<EOF
        ALTER USER 'root'@'localhost' IDENTIFIED BY 'redhat';
        DELETE FROM mysql.user WHERE User='';
        DROP DATABASE IF EXISTS test;
        DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
        FLUSH PRIVILEGES;
        EOF
      args:
        executable: /bin/bash
      when: "'Access denied' not in mariadb_root_check.stderr"

    # Create database and user
    - name: Create database and user in MariaDB
      shell: |
        mysql --user=root --password=redhat <<EOF
        CREATE DATABASE vishnu_DB;
        CREATE USER 'vishnu'@'localhost' IDENTIFIED BY 'redhat';
        GRANT ALL PRIVILEGES ON vishnu_DB.* TO 'vishnu'@'localhost';
        FLUSH PRIVILEGES;
        EOF
      args:
        executable: /bin/bash

      register: db_creation_result
      failed_when: db_creation_result.rc != 0 and "exists" not in db_creation_result.stderr
      changed_when: "'CREATE DATABASE' in db_creation_result.stdout or 'GRANT' in db_creation_result.stdout"

    - name: Copy wp-config.php
      template:
        src: /root/ansible-project.git/wp-config.php.j2  # Make sure this path is correct
        dest: /home/vishnu/website/public/wordpress/wp-config.php

    - name: Navigate to the website public directory
      shell: cd /home/vishnu/website/public
      args:
        chdir: /home/vishnu/website/public
      become: yes

    - name: Download phpMyAdmin zip
      get_url:
        url: https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip
        dest: /home/vishnu/website/public/phpMyAdmin-5.2.1-all-languages.zip

    - name: Unzip phpMyAdmin zip
      unarchive:
        src: /home/vishnu/website/public/phpMyAdmin-5.2.1-all-languages.zip
        dest: /home/vishnu/website/public/
        remote_src: yes

    - name: Copy extracted phpMyAdmin to a new folder
      command: cp -r /home/vishnu/website/public/phpMyAdmin-5.2.1-all-languages /home/vishnu/website/public/phpMyAdmin

    - name: Remove the extracted phpMyAdmin folder
      file:
        path: /home/vishnu/website/public/phpMyAdmin-5.2.1-all-languages
        state: absent

    - name: Remove the phpMyAdmin zip file
      file:
        path: /home/vishnu/website/public/phpMyAdmin-5.2.1-all-languages.zip
        state: absent

      handlers:
    - name: Restart SSH service
      service:
      name: sshd
      state: restarted


    - name: Change ownership of /home/vishnu
      command: chown root:root /home/vishnu
      become: yes

    - name: Change ownership of /home/vishnu/website/public
      command: chown vishnu:vishnu /home/vishnu/website/public
      become: yes

    - name: Restart SSH service
      service:
        name: sshd
        state: restarted

    - name: Install Certbot and Nginx plugin
      yum:
        name:
          - certbot
          - python3-certbot-nginx
        state: present
      become: yes

    - name: Configure Nginx server block for vizhnu
      copy:
        dest: /etc/nginx/conf.d/myweb.conf
        content: |
          server {
              listen 80;
              listen [::]:80;
              server_name vizhnu.rageshvk.site;  # Default server name

              root /home/vishnu/website/public;

              # Load configuration files for the default server block.
              include /etc/nginx/default.d/*.conf;

              error_page 404 /404.html;
              location = /404.html {
              }

              error_page 500 502 503 504 /50x.html;
              location = /50x.html {
              }
          }
      become: yes

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test_result
      failed_when: "'syntax is okay' not in nginx_test_result.stderr and 'test is successful' not in nginx_test_result.stderr"
      become: yes

    - name: Restart Nginx to apply changes
      systemd:
        name: nginx
        state: restarted
      become: yes

    - name: Obtain SSL certificate using Certbot
      command: certbot --nginx -d vizhnu.rageshvk.site --non-interactive --agree-tos --email vishnumahesh166@gmail.com
      register: certbot_result
      failed_when: certbot_result.rc != 0
      changed_when: "'Congratulations' in certbot_result.stdout or 'Certbot' in certbot_result.stderr"


    - name: Reload Nginx after SSL setup
      systemd:
        name: nginx
        state: reloaded
